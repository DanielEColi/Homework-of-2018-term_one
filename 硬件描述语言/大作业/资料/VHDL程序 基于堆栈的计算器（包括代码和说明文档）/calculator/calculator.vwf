/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2006 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 8.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1";
	SIMULATION_TIME = 8000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inutdata")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inutdata[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inutdata";
}

SIGNAL("inutdata[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inutdata";
}

SIGNAL("inutdata[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inutdata";
}

SIGNAL("inutdata[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inutdata";
}

SIGNAL("inutdata[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inutdata";
}

SIGNAL("inutdata[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inutdata";
}

SIGNAL("inutdata[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inutdata";
}

SIGNAL("inutdata[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inutdata";
}

SIGNAL("operate_instruction")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("operate_instruction[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "operate_instruction";
}

SIGNAL("operate_instruction[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "operate_instruction";
}

SIGNAL("operate_instruction[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "operate_instruction";
}

SIGNAL("operate_instruction[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "operate_instruction";
}

SIGNAL("operate_instruction[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "operate_instruction";
}

SIGNAL("operate_instruction[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "operate_instruction";
}

SIGNAL("operate_instruction[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "operate_instruction";
}

SIGNAL("operate_instruction[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "operate_instruction";
}

SIGNAL("operate_instruction[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "operate_instruction";
}

SIGNAL("operation_overflow")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("stack_empty")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("stack_full")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("stack_singledata")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("operation_result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("operation_result[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "operation_result";
}

SIGNAL("operation_result[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "operation_result";
}

SIGNAL("operation_result[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "operation_result";
}

SIGNAL("operation_result[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "operation_result";
}

SIGNAL("operation_result[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "operation_result";
}

SIGNAL("operation_result[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "operation_result";
}

SIGNAL("operation_result[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "operation_result";
}

SIGNAL("operation_result[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "operation_result";
}

SIGNAL("mystack:inst1|s[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("mystack:inst1|s[0][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[0]";
}

SIGNAL("mystack:inst1|s[0][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[0]";
}

SIGNAL("mystack:inst1|s[0][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[0]";
}

SIGNAL("mystack:inst1|s[0][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[0]";
}

SIGNAL("mystack:inst1|s[0][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[0]";
}

SIGNAL("mystack:inst1|s[0][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[0]";
}

SIGNAL("mystack:inst1|s[0][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[0]";
}

SIGNAL("mystack:inst1|s[0][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[0]";
}

SIGNAL("mystack:inst1|s[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("mystack:inst1|s[1][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[1]";
}

SIGNAL("mystack:inst1|s[1][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[1]";
}

SIGNAL("mystack:inst1|s[1][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[1]";
}

SIGNAL("mystack:inst1|s[1][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[1]";
}

SIGNAL("mystack:inst1|s[1][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[1]";
}

SIGNAL("mystack:inst1|s[1][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[1]";
}

SIGNAL("mystack:inst1|s[1][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[1]";
}

SIGNAL("mystack:inst1|s[1][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[1]";
}

SIGNAL("mystack:inst1|s[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("mystack:inst1|s[3][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[3]";
}

SIGNAL("mystack:inst1|s[3][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[3]";
}

SIGNAL("mystack:inst1|s[3][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[3]";
}

SIGNAL("mystack:inst1|s[3][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[3]";
}

SIGNAL("mystack:inst1|s[3][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[3]";
}

SIGNAL("mystack:inst1|s[3][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[3]";
}

SIGNAL("mystack:inst1|s[3][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[3]";
}

SIGNAL("mystack:inst1|s[3][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[3]";
}

SIGNAL("mystack:inst1|output_sel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("mystack:inst1|output_sel[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|output_sel";
}

SIGNAL("mystack:inst1|output_sel[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|output_sel";
}

SIGNAL("mystack:inst1|output_sel[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|output_sel";
}

SIGNAL("mystack:inst1|s[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("mystack:inst1|s[2][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[2]";
}

SIGNAL("mystack:inst1|s[2][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[2]";
}

SIGNAL("mystack:inst1|s[2][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[2]";
}

SIGNAL("mystack:inst1|s[2][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[2]";
}

SIGNAL("mystack:inst1|s[2][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[2]";
}

SIGNAL("mystack:inst1|s[2][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[2]";
}

SIGNAL("mystack:inst1|s[2][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[2]";
}

SIGNAL("mystack:inst1|s[2][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|s[2]";
}

SIGNAL("mystack:inst1|cnt")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("mystack:inst1|cnt[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|cnt";
}

SIGNAL("mystack:inst1|cnt[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|cnt";
}

SIGNAL("mystack:inst1|cnt[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|cnt";
}

SIGNAL("mystack:inst1|cnt[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "mystack:inst1|cnt";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 177;
			LEVEL 0 FOR 22.5;
			LEVEL 1 FOR 22.5;
		}
		LEVEL 0 FOR 22.5;
		LEVEL 1 FOR 12.5;
	}
}

TRANSITION_LIST("inutdata[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 6400.0;
	}
}

TRANSITION_LIST("inutdata[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 6400.0;
	}
}

TRANSITION_LIST("inutdata[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 6400.0;
	}
}

TRANSITION_LIST("inutdata[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 6400.0;
	}
}

TRANSITION_LIST("inutdata[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 1160.0;
		LEVEL 0 FOR 5840.0;
	}
}

TRANSITION_LIST("inutdata[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 2240.0;
	}
}

TRANSITION_LIST("inutdata[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 440.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1280.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 2240.0;
	}
}

TRANSITION_LIST("inutdata[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 3740.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 3440.0;
	}
}

TRANSITION_LIST("operate_instruction[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 7920.0;
	}
}

TRANSITION_LIST("operate_instruction[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 230.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 6420.0;
	}
}

TRANSITION_LIST("operate_instruction[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 540.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 1760.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 5360.0;
	}
}

TRANSITION_LIST("operate_instruction[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 6840.0;
	}
}

TRANSITION_LIST("operate_instruction[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1400.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 6560.0;
	}
}

TRANSITION_LIST("operate_instruction[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1710.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 6250.0;
	}
}

TRANSITION_LIST("operate_instruction[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1890.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 6060.0;
	}
}

TRANSITION_LIST("operate_instruction[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2020.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 5920.0;
	}
}

TRANSITION_LIST("operate_instruction[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 5720.0;
	}
}

TRANSITION_LIST("operation_overflow")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
	}
}

TRANSITION_LIST("stack_empty")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 164.54;
		LEVEL 0 FOR 406.629;
		LEVEL 1 FOR 43.371;
		LEVEL 0 FOR 541.629;
		LEVEL 1 FOR 43.371;
		LEVEL 0 FOR 226.629;
		LEVEL 1 FOR 43.371;
		LEVEL 0 FOR 271.629;
		LEVEL 1 FOR 43.371;
		LEVEL 0 FOR 722.309;
		LEVEL 1 FOR 5493.151;
	}
}

TRANSITION_LIST("stack_full")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 390.107;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 450.0;
		LEVEL 1 FOR 135.0;
		LEVEL 0 FOR 135.0;
		LEVEL 1 FOR 135.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 6214.893;
	}
}

TRANSITION_LIST("stack_singledata")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 165.162;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 7789.838;
	}
}

TRANSITION_LIST("operation_result[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1069.075;
		LEVEL 1 FOR 270.0;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 179.821;
		LEVEL 0 FOR 0.946;
		LEVEL 1 FOR 43.539;
		LEVEL 0 FOR 0.515;
		LEVEL 1 FOR 133.233;
		LEVEL 0 FOR 0.175;
		LEVEL 1 FOR 586.771;
		LEVEL 0 FOR 5490.925;
	}
}

TRANSITION_LIST("operation_result[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1067.88;
		LEVEL 1 FOR 270.0;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 179.356;
		LEVEL 0 FOR 2.314;
		LEVEL 1 FOR 42.686;
		LEVEL 0 FOR 2.05;
		LEVEL 1 FOR 358.594;
		LEVEL 0 FOR 135.0;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 5492.12;
	}
}

TRANSITION_LIST("operation_result[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1067.424;
		LEVEL 1 FOR 270.0;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 181.28;
		LEVEL 0 FOR 0.781;
		LEVEL 1 FOR 43.072;
		LEVEL 0 FOR 1.147;
		LEVEL 1 FOR 133.121;
		LEVEL 0 FOR 0.616;
		LEVEL 1 FOR 224.983;
		LEVEL 0 FOR 135.0;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 5492.576;
	}
}

TRANSITION_LIST("operation_result[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1068.244;
		LEVEL 1 FOR 270.0;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 179.723;
		LEVEL 0 FOR 45.277;
		LEVEL 1 FOR 0.734;
		LEVEL 0 FOR 133.291;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 0.975;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 135.0;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 5491.756;
	}
}

TRANSITION_LIST("operation_result[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 304.477;
		LEVEL 1 FOR 405.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 675.368;
		LEVEL 0 FOR 0.719;
		LEVEL 1 FOR 44.281;
		LEVEL 0 FOR 0.868;
		LEVEL 1 FOR 132.004;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 1.76;
		LEVEL 0 FOR 91.087;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 43.913;
		LEVEL 1 FOR 135.0;
		LEVEL 0 FOR 5715.523;
	}
}

TRANSITION_LIST("operation_result[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 393.39;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 135.0;
		LEVEL 0 FOR 90.194;
		LEVEL 1 FOR 179.806;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 180.194;
		LEVEL 0 FOR 0.888;
		LEVEL 1 FOR 44.112;
		LEVEL 0 FOR 0.691;
		LEVEL 1 FOR 133.115;
		LEVEL 0 FOR 0.569;
		LEVEL 1 FOR 135.625;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 44.806;
		LEVEL 0 FOR 135.0;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 5491.61;
	}
}

TRANSITION_LIST("operation_result[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 122.82;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 405.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 89.912;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 0.663;
		LEVEL 1 FOR 134.425;
		LEVEL 0 FOR 90.379;
		LEVEL 1 FOR 314.533;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 0.467;
		LEVEL 0 FOR 133.993;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 0.628;
		LEVEL 1 FOR 89.912;
		LEVEL 0 FOR 45.663;
		LEVEL 1 FOR 449.425;
		LEVEL 0 FOR 5447.18;
	}
}

TRANSITION_LIST("operation_result[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 303.015;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 135.0;
		LEVEL 0 FOR 450.673;
		LEVEL 1 FOR 0.572;
		LEVEL 0 FOR 269.575;
		LEVEL 1 FOR 0.228;
		LEVEL 0 FOR 314.772;
		LEVEL 1 FOR 0.228;
		LEVEL 0 FOR 314.625;
		LEVEL 1 FOR 0.572;
		LEVEL 0 FOR 5940.74;
	}
}

TRANSITION_LIST("mystack:inst1|s[0][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
	}
}

TRANSITION_LIST("mystack:inst1|s[0][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
	}
}

TRANSITION_LIST("mystack:inst1|s[0][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
	}
}

TRANSITION_LIST("mystack:inst1|s[0][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
	}
}

TRANSITION_LIST("mystack:inst1|s[0][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
	}
}

TRANSITION_LIST("mystack:inst1|s[0][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
	}
}

TRANSITION_LIST("mystack:inst1|s[0][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 115.407;
		LEVEL 1 FOR 2430.0;
		LEVEL 0 FOR 5454.593;
	}
}

TRANSITION_LIST("mystack:inst1|s[0][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
	}
}

TRANSITION_LIST("mystack:inst1|s[1][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1960.424;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 5499.576;
	}
}

TRANSITION_LIST("mystack:inst1|s[1][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1960.436;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 135.0;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 5499.564;
	}
}

TRANSITION_LIST("mystack:inst1|s[1][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1960.447;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 135.0;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 5499.553;
	}
}

TRANSITION_LIST("mystack:inst1|s[1][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1960.445;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 135.0;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 5499.555;
	}
}

TRANSITION_LIST("mystack:inst1|s[1][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2140.442;
		LEVEL 1 FOR 135.0;
		LEVEL 0 FOR 5724.558;
	}
}

TRANSITION_LIST("mystack:inst1|s[1][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1960.439;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 135.0;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 5499.561;
	}
}

TRANSITION_LIST("mystack:inst1|s[1][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 205.411;
		LEVEL 1 FOR 2295.0;
		LEVEL 0 FOR 5499.589;
	}
}

TRANSITION_LIST("mystack:inst1|s[1][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
	}
}

TRANSITION_LIST("mystack:inst1|s[3][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1060.44;
		LEVEL 1 FOR 135.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 6219.56;
	}
}

TRANSITION_LIST("mystack:inst1|s[3][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1060.436;
		LEVEL 1 FOR 135.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 6219.564;
	}
}

TRANSITION_LIST("mystack:inst1|s[3][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1060.447;
		LEVEL 1 FOR 135.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 6219.553;
	}
}

TRANSITION_LIST("mystack:inst1|s[3][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1060.444;
		LEVEL 1 FOR 135.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 6219.556;
	}
}

TRANSITION_LIST("mystack:inst1|s[3][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 385.442;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 495.0;
		LEVEL 1 FOR 135.0;
		LEVEL 0 FOR 135.0;
		LEVEL 1 FOR 135.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 6219.558;
	}
}

TRANSITION_LIST("mystack:inst1|s[3][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 385.439;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 990.0;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 6219.561;
	}
}

TRANSITION_LIST("mystack:inst1|s[3][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1555.407;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 6219.593;
	}
}

TRANSITION_LIST("mystack:inst1|s[3][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
	}
}

TRANSITION_LIST("mystack:inst1|output_sel[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1915.441;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 6039.559;
	}
}

TRANSITION_LIST("mystack:inst1|output_sel[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1420.442;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 270.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 6219.558;
	}
}

TRANSITION_LIST("mystack:inst1|output_sel[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1150.442;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 540.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 270.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 5904.558;
	}
}

TRANSITION_LIST("mystack:inst1|s[2][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 295.402;
		LEVEL 1 FOR 405.0;
		LEVEL 0 FOR 7299.598;
	}
}

TRANSITION_LIST("mystack:inst1|s[2][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 925.407;
		LEVEL 1 FOR 855.0;
		LEVEL 0 FOR 6219.593;
	}
}

TRANSITION_LIST("mystack:inst1|s[2][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 925.439;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 315.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 6039.561;
	}
}

TRANSITION_LIST("mystack:inst1|s[2][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 295.442;
		LEVEL 1 FOR 405.0;
		LEVEL 0 FOR 495.0;
		LEVEL 1 FOR 765.0;
		LEVEL 0 FOR 6039.558;
	}
}

TRANSITION_LIST("mystack:inst1|s[2][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1195.445;
		LEVEL 1 FOR 270.0;
		LEVEL 0 FOR 6534.555;
	}
}

TRANSITION_LIST("mystack:inst1|s[2][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1195.447;
		LEVEL 1 FOR 270.0;
		LEVEL 0 FOR 315.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 6039.553;
	}
}

TRANSITION_LIST("mystack:inst1|s[2][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1195.44;
		LEVEL 1 FOR 270.0;
		LEVEL 0 FOR 315.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 6039.56;
	}
}

TRANSITION_LIST("mystack:inst1|s[2][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1195.44;
		LEVEL 1 FOR 270.0;
		LEVEL 0 FOR 315.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 6039.56;
	}
}

TRANSITION_LIST("mystack:inst1|cnt[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
	}
}

TRANSITION_LIST("mystack:inst1|cnt[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 385.435;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 495.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 135.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 6264.565;
	}
}

TRANSITION_LIST("mystack:inst1|cnt[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 205.446;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 495.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 135.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 765.0;
		LEVEL 0 FOR 5499.554;
	}
}

TRANSITION_LIST("mystack:inst1|cnt[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 115.446;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 135.0;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 135.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 135.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 585.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 5454.554;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "inutdata";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "inutdata[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inutdata[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inutdata[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inutdata[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inutdata[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inutdata[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inutdata[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inutdata[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "operate_instruction";
	EXPAND_STATUS = EXPANDED;
	RADIX = Octal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "operate_instruction[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "operate_instruction[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "operate_instruction[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "operate_instruction[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "operate_instruction[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "operate_instruction[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "operate_instruction[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "operate_instruction[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "operate_instruction[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22, 23, 24, 25, 26, 27, 28;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[0][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[0][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[0][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[0][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[0][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[0][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[0][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[0][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
	CHILDREN = 30, 31, 32, 33, 34, 35, 36, 37;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[1][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[1][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[1][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[1][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[1][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[1][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[1][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[1][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
	CHILDREN = 39, 40, 41, 42, 43, 44, 45, 46;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[2][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[2][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[2][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[2][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[2][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[2][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[2][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[2][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
	CHILDREN = 48, 49, 50, 51, 52, 53, 54, 55;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[3][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[3][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[3][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[3][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[3][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[3][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[3][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|s[3][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "operation_result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
	CHILDREN = 57, 58, 59, 60, 61, 62, 63, 64;
}

DISPLAY_LINE
{
	CHANNEL = "operation_result[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "operation_result[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "operation_result[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "operation_result[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "operation_result[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "operation_result[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "operation_result[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "operation_result[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|output_sel";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 65;
	TREE_LEVEL = 0;
	CHILDREN = 66, 67, 68;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|output_sel[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|output_sel[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|output_sel[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "operation_overflow";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 69;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "stack_empty";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 70;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "stack_full";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 71;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "stack_singledata";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 72;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|cnt";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 73;
	TREE_LEVEL = 0;
	CHILDREN = 74, 75, 76, 77;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|cnt[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|cnt[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|cnt[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "mystack:inst1|cnt[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 73;
}

TIME_BAR
{
	TIME = 40000;
	MASTER = TRUE;
}
;
